{"ast":null,"code":"import{createSlice,createAsyncThunk}from'@reduxjs/toolkit';import*as authService from'../../services/auth';const initialState={user:null,accessToken:localStorage.getItem('accessToken'),refreshToken:localStorage.getItem('refreshToken'),loading:false,error:null};export const login=createAsyncThunk('auth/login',async _ref=>{let{email,password}=_ref;const response=await authService.login(email,password);localStorage.setItem('accessToken',response.accessToken);localStorage.setItem('refreshToken',response.refreshToken);return response;});export const register=createAsyncThunk('auth/register',async _ref2=>{let{username,email,password}=_ref2;return await authService.register(username,email,password);});export const logout=createAsyncThunk('auth/logout',async(_,_ref3)=>{let{getState}=_ref3;const{refreshToken}=getState().auth;if(refreshToken){await authService.revokeToken(refreshToken);}localStorage.removeItem('accessToken');localStorage.removeItem('refreshToken');});const authSlice=createSlice({name:'auth',initialState,reducers:{setCredentials:(state,action)=>{state.user=action.payload.user;state.accessToken=action.payload.accessToken;state.refreshToken=action.payload.refreshToken;},clearCredentials:state=>{state.user=null;state.accessToken=null;state.refreshToken=null;state.error=null;}},extraReducers:builder=>{// Login\nbuilder.addCase(login.pending,state=>{state.loading=true;state.error=null;}).addCase(login.fulfilled,(state,action)=>{state.loading=false;state.user=action.payload.user;state.accessToken=action.payload.accessToken;state.refreshToken=action.payload.refreshToken;}).addCase(login.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'Giriş başarısız';});// Register\nbuilder.addCase(register.pending,state=>{state.loading=true;state.error=null;}).addCase(register.fulfilled,(state,action)=>{state.loading=false;state.user=action.payload;}).addCase(register.rejected,(state,action)=>{state.loading=false;state.error=action.error.message||'Kayıt başarısız';});// Logout\nbuilder.addCase(logout.pending,state=>{state.loading=true;}).addCase(logout.fulfilled,state=>{state.loading=false;state.user=null;state.accessToken=null;state.refreshToken=null;}).addCase(logout.rejected,state=>{state.loading=false;});}});export const{setCredentials,clearCredentials}=authSlice.actions;export default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","initialState","user","accessToken","localStorage","getItem","refreshToken","loading","error","login","_ref","email","password","response","setItem","register","_ref2","username","logout","_","_ref3","getState","auth","revokeToken","removeItem","authSlice","name","reducers","setCredentials","state","action","payload","clearCredentials","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","reducer"],"sources":["/home/mertmnv/Masaüstü/Projeler/api/client/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { User, AuthResponse } from '../../types';\nimport * as authService from '../../services/auth';\n\ninterface AuthState {\n  user: User | null;\n  accessToken: string | null;\n  refreshToken: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  accessToken: localStorage.getItem('accessToken'),\n  refreshToken: localStorage.getItem('refreshToken'),\n  loading: false,\n  error: null,\n};\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }: { email: string; password: string }) => {\n    const response = await authService.login(email, password);\n    localStorage.setItem('accessToken', response.accessToken);\n    localStorage.setItem('refreshToken', response.refreshToken);\n    return response;\n  }\n);\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async ({ username, email, password }: { username: string; email: string; password: string }) => {\n    return await authService.register(username, email, password);\n  }\n);\n\nexport const logout = createAsyncThunk('auth/logout', async (_, { getState }) => {\n  const { refreshToken } = (getState() as any).auth;\n  if (refreshToken) {\n    await authService.revokeToken(refreshToken);\n  }\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('refreshToken');\n});\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setCredentials: (state, action: PayloadAction<AuthResponse>) => {\n      state.user = action.payload.user;\n      state.accessToken = action.payload.accessToken;\n      state.refreshToken = action.payload.refreshToken;\n    },\n    clearCredentials: (state) => {\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    // Login\n    builder\n      .addCase(login.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n        state.accessToken = action.payload.accessToken;\n        state.refreshToken = action.payload.refreshToken;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Giriş başarısız';\n      });\n\n    // Register\n    builder\n      .addCase(register.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || 'Kayıt başarısız';\n      });\n\n    // Logout\n    builder\n      .addCase(logout.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.loading = false;\n        state.user = null;\n        state.accessToken = null;\n        state.refreshToken = null;\n      })\n      .addCase(logout.rejected, (state) => {\n        state.loading = false;\n      });\n  },\n});\n\nexport const { setCredentials, clearCredentials } = authSlice.actions;\n\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}