{"ast":null,"code":"import api from'./api';export const login=async(email,password)=>{const response=await api.post('/auth/login',{email,password});return response.data.data;};export const register=async(username,email,password)=>{const response=await api.post('/auth/register',{username,email,password});return response.data.data;};export const refreshToken=async(accessToken,refreshToken)=>{const response=await api.post('/auth/refresh-token',{accessToken,refreshToken});return response.data.data;};export const revokeToken=async refreshToken=>{const response=await api.post('/auth/revoke-token',{refreshToken});return response.data.success;};","map":{"version":3,"names":["api","login","email","password","response","post","data","register","username","refreshToken","accessToken","revokeToken","success"],"sources":["/home/mertmnv/Masaüstü/Projeler/api/client/src/services/auth.ts"],"sourcesContent":["import api from './api';\nimport { AuthResponse, ApiResponse, User } from '../types';\n\nexport const login = async (email: string, password: string): Promise<AuthResponse> => {\n  const response = await api.post<ApiResponse<AuthResponse>>('/auth/login', {\n    email,\n    password,\n  });\n  return response.data.data!;\n};\n\nexport const register = async (\n  username: string,\n  email: string,\n  password: string\n): Promise<User> => {\n  const response = await api.post<ApiResponse<User>>('/auth/register', {\n    username,\n    email,\n    password,\n  });\n  return response.data.data!;\n};\n\nexport const refreshToken = async (\n  accessToken: string,\n  refreshToken: string\n): Promise<{ accessToken: string; refreshToken: string }> => {\n  const response = await api.post<ApiResponse<{ accessToken: string; refreshToken: string }>>(\n    '/auth/refresh-token',\n    {\n      accessToken,\n      refreshToken,\n    }\n  );\n  return response.data.data!;\n};\n\nexport const revokeToken = async (refreshToken: string): Promise<boolean> => {\n  const response = await api.post<ApiResponse<void>>('/auth/revoke-token', {\n    refreshToken,\n  });\n  return response.data.success;\n}; "],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAGvB,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAA4B,CACrF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAA4B,aAAa,CAAE,CACxEH,KAAK,CACLC,QACF,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CACtBC,QAAgB,CAChBN,KAAa,CACbC,QAAgB,GACE,CAClB,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAoB,gBAAgB,CAAE,CACnEG,QAAQ,CACRN,KAAK,CACLC,QACF,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED,MAAO,MAAM,CAAAG,YAAY,CAAG,KAAAA,CAC1BC,WAAmB,CACnBD,YAAoB,GACuC,CAC3D,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAC7B,qBAAqB,CACrB,CACEK,WAAW,CACXD,YACF,CACF,CAAC,CACD,MAAO,CAAAL,QAAQ,CAACE,IAAI,CAACA,IAAI,CAC3B,CAAC,CAED,MAAO,MAAM,CAAAK,WAAW,CAAG,KAAO,CAAAF,YAAoB,EAAuB,CAC3E,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAoB,oBAAoB,CAAE,CACvEI,YACF,CAAC,CAAC,CACF,MAAO,CAAAL,QAAQ,CAACE,IAAI,CAACM,OAAO,CAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}