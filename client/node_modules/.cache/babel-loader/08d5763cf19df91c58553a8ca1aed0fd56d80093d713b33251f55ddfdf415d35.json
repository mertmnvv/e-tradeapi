{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useSelector}from'react-redux';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,roles}=_ref;const{user}=useSelector(state=>state.auth);if(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}if(roles&&!roles.includes(user.role)){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useSelector","jsx","_jsx","Fragment","_Fragment","ProtectedRoute","_ref","children","roles","user","state","auth","to","replace","includes","role"],"sources":["/home/mertmnv/Masaüstü/Projeler/api/client/src/components/common/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  roles?: string[];\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ children, roles }) => {\n  const { user } = useSelector((state: RootState) => state.auth);\n\n  if (!user) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  if (roles && !roles.includes(user.role)) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAQ1C,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,QAAQ,CAAEC,KAAM,CAAC,CAAAF,IAAA,CACxE,KAAM,CAAEG,IAAK,CAAC,CAAGT,WAAW,CAAEU,KAAgB,EAAKA,KAAK,CAACC,IAAI,CAAC,CAE9D,GAAI,CAACF,IAAI,CAAE,CACT,mBAAOP,IAAA,CAACH,QAAQ,EAACa,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA,GAAIL,KAAK,EAAI,CAACA,KAAK,CAACM,QAAQ,CAACL,IAAI,CAACM,IAAI,CAAC,CAAE,CACvC,mBAAOb,IAAA,CAACH,QAAQ,EAACa,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CAEA,mBAAOX,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}